name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest tests

  build-docker-image:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t mousumiau/mlm:latest .

      - name: Push Docker image
        run: docker push mousumiau/mlm:latest

  deploy:
    needs: build-docker-image
    runs-on: ubuntu-latest

    steps:
      - name: Set up Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo mv minikube-linux-amd64 /usr/local/bin/minikube
          sudo chmod +x /usr/local/bin/minikube

      - name: Start Minikube
        run: |
          minikube start --driver=docker  # Using Docker driver for Minikube

      - name: Set up Docker environment for Minikube
        run: |
          eval $(minikube -p minikube docker-env)  # Point to Minikube Docker daemon

      - name: Create Kubernetes deployment
        run: |
          kubectl create deployment Reg --image=mousumiau/mlm:latest

      - name: Expose Kubernetes deployment
        run: |
          kubectl expose deployment Reg --type=LoadBalancer --port=80  # Expose the deployment as a service


